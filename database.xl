// *****************************************************************************
// database.xl                                                     Tao3D project
// *****************************************************************************
//
// File description:
//
//    Implements commands to connect to database.
//    Provide a tool to draw a query result as a table
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3
// (C) 2012-2013, Baptiste Soulisse <baptiste.soulisse@taodyne.com>
// (C) 2012-2013, Catherine Burvelle <catherine@taodyne.com>
// (C) 2012-2014,2019, Christophe de Dinechin <christophe@dinechin.org>
// (C) 2012-2013, Jérôme Forissier <jerome@taodyne.com>
// *****************************************************************************
// This file is part of Tao3D
//
// Tao3D is free software: you can r redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Tao3D is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Tao3D, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************

module_description
    id "2EBE7E14-F098-4A84-BB13-75F0EFCE311Z"
    name "Database Connector"
    import_name "dbConnector"
    description "Connection to SQL databases through drivers."
    author "Taodyne SAS"
    website "http://www.taodyne.com"
    version 1.002

module_description "fr",
    name "Connecteur de base de données."
    description "Connection aux bases de données SQL autravers de pilotes."

draw_table x:integer, y:integer, queryResult:tree ->
//-----------------------------------------------------------------------------
// Drawing function
//-----------------------------------------------------------------------------
    locally
        cellId := 0
        row := 0
        col := 0
        translatex x - (table_col + 1) * cell_width  / 2
        translatey y + (table_row - 1) * cell_height / 2
        time
        draw_cells with queryResult

//-----------------------------------------------------------------------------
// Configuration
//-----------------------------------------------------------------------------
table_theme -> "default"

cell_width  -> 250
cell_height -> 70
cell_edge_color -> "black"
cell_bg_color ->  "transparent"
cell_text_color -> "font"
cell_font -> "Arial", 15

//-----------------------------------------------------------------------------
// Declarations
//-----------------------------------------------------------------------------

cellId -> 0
row -> 0
col -> 0

table_row -> 0
table_col -> 0

toText T:text -> T
toText Tr:tree -> text Tr

draw_a_cell "default", C:integer, R:integer, T:tree ->
    locally
        line_color cell_edge_color
        color cell_bg_color
        rectangle cell_width * C, -cell_height * R, cell_width, cell_height
        text_box cell_width * C, -cell_height * R, cell_width, cell_height,
            align_center
            vertical_align_center
            color cell_text_color
            line_color "font"
            font cell_font
            text toText T

draw_cells cc:tree ->
    cellId := cellId + 1
    // First cell is row number
    // Second cell is column number
    if cellId = 1 then
        table_row := cc
    else if cellId = 2 then
        table_col := cc

    // Other cells are data
    if cellId > 2 then
        if col >= table_col then
            row := row + 1
            col := 0
        col := col + 1
        draw_a_cell table_theme, col, row, cc





